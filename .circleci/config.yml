# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

executors:
  amd64:
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
    resource_class: medium
    environment:
      DOCKER_BUILDKIT: 1
  arm64:
    machine:
      image: ubuntu-2004:202101-01
      docker_layer_caching: true
    resource_class: arm.medium
    environment:
      DOCKER_BUILDKIT: 1
  docker: &docker-executor
    docker:
      - image: ruby:latest

commands:
  install_docker_client:
    description: "Install Docker client"
    steps:
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
  checkout_ruby_master:
    description: "Checkout Ruby master"
    steps:
      - run:
          command: |
            if test -f tmp/ruby/configure.ac; then
              cd tmp/ruby
              git pull --rebase
            else
              mkdir -p tmp
              git clone https://github.com/ruby/ruby.git tmp/ruby
            fi
  build_image:
    description: "Build Docker image"
    parameters:
      ruby_version:
        type: string
        default: "master"
      nightly:
        type: boolean
        default: false
      image_name_suffix:
        type: string
        default: ''
      arch:
        type: string
        default: "amd64"
      ubuntu_version:
        type: string
        default: "jammy"
      tag:
        type: string
        default: ""
    steps:
      - run:
          name: Build docker image
          command: |
            rake docker:build ruby_version=<< parameters.ruby_version >> ubuntu_version=<< parameters.ubuntu_version >> image_name_suffix=<< parameters.image_name_suffix >><<# parameters.nightly >> nightly=yes<</ parameters.nightly >> arch=<< parameters.arch >> tag=<< parameters.tag >>
  push_image:
    description: "Push Docker image"
    steps:
      - run:
          name: Push docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push rubylang/ruby
  push_image_by_tag:
    description: "Push Docker image"
    parameters:
      tag:
        type: string
        default: ""
    steps:
      - run:
          name: Push docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push rubylang/ruby:<< parameters.tag >>

jobs:
  build_master:
    parameters:
      nightly:
        type: boolean
        default: false
      push:
        type: boolean
        default: false
      arch:
        type: string
        default: "amd64"
      ubuntu_version:
        type: string
        default: "jammy"
      ruby_version:
        type: string
        default: "master"
      executor:
        type: executor
      tag:
        type: string
        default: ""
    executor: << parameters.executor >>
    working_directory: ~/repo
    steps:
      - checkout
      - when:
          condition: # if tag is not set, assume it's not multiarch
            equal: ["", << parameters.tag >>]
          steps:
            - setup_remote_docker
            - install_docker_client
      - when:
          condition:
            equal: ["master", << parameters.ruby_version >>]
          steps:
            - checkout_ruby_master
      - build_image:
          ruby_version: << parameters.ruby_version >>
          nightly: << parameters.nightly >>
          arch: << parameters.arch >>
          ubuntu_version: << parameters.ubuntu_version >>
          tag: << parameters.tag >>
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image
      - when:
          condition: <<parameters.tag>>
          steps:
            - push_image_by_tag:
                tag: <<parameters.tag>>

  build_master_debug:
    parameters:
      nightly:
        type: boolean
        default: false
      push:
        type: boolean
        default: false
      ubuntu_version:
        type: string
        default: "jammy"
    docker:
      - image: ruby:latest
    working_directory: ~/repo
    environment:
      cppflags: -DRUBY_DEBUG=1
      optflags: -O3 -fno-inline
    steps:
      - checkout
      - setup_remote_docker
      - install_docker_client
      - checkout_ruby_master
      - build_image:
          ruby_version: "master"
          nightly: << parameters.nightly >>
          ubuntu_version: << parameters.ubuntu_version >>
          image_name_suffix: -debug
      - when:
          condition: <<parameters.push>>
          steps:
            - push_image

  deploy_multiarch:
    parameters:
      tag:
        type: string
        default: "3.1.2-jammy"
    docker:
      - image: cimg/base:2022.06
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: "Create manifest"
          command: |
            docker manifest create rubylang/ruby:<< parameters.tag >>-multi \
              --amend rubylang/ruby:<< parameters.tag >>-amd64-${CIRCLE_SHA1} \
              --amend rubylang/ruby:<< parameters.tag >>-arm64-${CIRCLE_SHA1}
      - run:
          name: "Push manifest"
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker manifest push rubylang/ruby:<< parameters.tag >>-multi

parameters:
  ruby_version:
    type: string
    description: '"master" or version nunmber ("3.1.2")'
    default: ""
  ubuntu_version:
    type: string
    default: "jammy"

workflows:
  version: 2

  nightly:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_master:
          nightly: true
          push: true
          ubuntu_version: "jammy"
          executor: docker
      - build_master:
          nightly: true
          push: true
          ubuntu_version: "bionic"
          executor: docker
      - build_master_debug:
          nightly: true
          push: true

  # Build amd64/arm64 multiarch docker image as "jammy-3.1.2-multi"
  # only triggered when pipeline is kicked over API
  build_multiarch:
    when:
      and:
        - not:
            equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - << pipeline.parameters.ruby_version >>
    jobs:
      - build_master:
          name: "build_master_amd64"
          ruby_version: << pipeline.parameters.ruby_version >>
          ubuntu_version: << pipeline.parameters.ubuntu_version >>
          executor: "amd64"
          tag: << pipeline.parameters.ruby_version >>-<< pipeline.parameters.ubuntu_version >>-amd64-${CIRCLE_SHA1}
      - build_master:
          name: "build_master_arm64"
          ruby_version: << pipeline.parameters.ruby_version >>
          ubuntu_version: << pipeline.parameters.ubuntu_version >>
          executor: "arm64"
          tag: << pipeline.parameters.ruby_version >>-<< pipeline.parameters.ubuntu_version >>-arm64-${CIRCLE_SHA1}
      - deploy_multiarch:
          requires:
            - build_master_amd64
            - build_master_arm64
          tag: << pipeline.parameters.ruby_version >>-<< pipeline.parameters.ubuntu_version >>
